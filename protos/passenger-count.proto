syntax = "proto2";

package proto;

option java_package = "fi.hsl.common.passengercount.proto";
option java_outer_classname = "PassengerCount";

message Data {
    required int32 SchemaVersion = 1 [default = 1];
    optional string topic = 2;
    required Payload payload = 3;
    optional int64 received_at = 4;
}

message Topic {
    required int32 SchemaVersion = 1 [default = 1];

    enum JourneyType {
        journey = 0;
        deadrun = 1; // Probably never used but included just in case
        signoff = 2; // Probably never used but included just in case
    }

    enum TemporalType {
        ongoing = 0;
        upcoming = 1; // Probably never used but included just in case
    }

    enum TransportMode {
        bus = 0;
        train = 1;
        tram = 2;
        metro = 3;
        ferry = 4;
        ubus = 5; //Used by U-line buses and other lines with limited real-time information
        robot = 6; //Used by robot buses
    }

    required int64 received_at = 2; // Our server timestamp as Epoch ms
    required string topic_prefix = 3;
    required string topic_version = 4;
    required JourneyType journey_type = 5;
    required TemporalType temporal_type = 6;

    optional TransportMode transport_mode = 7; // Optional because of rare bug in data source systems

    required int32 operator_id = 8;
    required int32 vehicle_number = 9;
}

message Payload {
    optional string desi = 1;
    optional string dir = 2;
    optional int32 oper = 3;
    optional int32 veh = 4;
    optional int64 tst = 5;
    optional int64 tsi = 6;
    optional double lat = 7;
    optional double long = 8;
    optional double odo = 9;
    optional string oday = 10;
    optional int32 jrn = 11;
    optional int32 line = 12;
    optional string start = 13;
    optional string loc = 14;
    optional int32 stop = 15;
    optional string route = 16;
    optional VehicleCounts vehicleCounts = 17;
}

message VehicleCounts {
    optional string countQuality = 1;
    optional int32 vehicleLoad = 2;
    optional double vehicleLoadRatio = 3;
    repeated DoorCount doorCounts = 4;
    optional string extensions = 5;
}

message DoorCount {
    optional string door = 1;
    repeated Count count = 2;
}

message Count {
    optional string clazz = 1; //Field 'class' in JSON, represents passenger class.
    optional int32 in = 2;
    optional int32 out = 3;
}

